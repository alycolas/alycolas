" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2008 Dec 17
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

"if has("vms")
"  set nobackup		" do not keep a backup file, use versions instead
"else
" set backup		" keep a backup file
"endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
" if has("gui_running")
  syntax on
  set guifont=FreeMono\ Bold\ 14
endif

if has("gui_running")
	inoremap <a-h> <left>
	inoremap <a-l> <right>
	inoremap <a-j> <c-o>gj
	inoremap <a-J> <c-o>J
	inoremap <a-k> <c-o>gk
	inoremap <a-w> <c-o>w
	inoremap <a-W> <c-o>W
	inoremap <a-b> <c-o>b
	inoremap <a-B> <c-o>B
	inoremap <a-i> <c-o>
	inoremap <a-I> <c-o>I
	inoremap <a-A> <c-o>A
	inoremap <a-e> <c-o>e
	inoremap <a-E> <c-o>E
	inoremap <a-o> <c-o>o
	inoremap <a-O> <c-o>O
	inoremap <a-u> <c-o>u
	inoremap <a-S> <c-o>S
	inoremap <a-s> <c-o>s
	inoremap <a-d> <c-o>d
	inoremap <a-D> <c-o>D
	inoremap <a-y> <c-o>y
	inoremap <a-Y> <c-o>Y
	inoremap <a-p> <c-o>p
	inoremap <a-P> <c-o>P
	inoremap <a-r> <c-r>
	inoremap <a-f> <c-o>f
	inoremap <a-F> <c-o>F
	inoremap <a-;> <esc>:
	inoremap <a-'> <esc>
" endif


" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif
" shotkey
	nmap <F11> <C-W>_
	nmap <F9> <C-W>w
	imap <F9> <ESC><F9>
set hlsearch
colo slate 
"desert "evening "peachpuff
set shiftwidth=2
set tabstop=2
set go=
set nu
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,chinese
set formatoptions+=mM
noremap <a-w> :exe &wrap==1 ? 'set nowrap' : 'set wrap'<cr>
set cursorline
nmap <tab> v>
nmap <s-tab> v<
vmap <tab> >gv
vmap <s-tab> <gv
